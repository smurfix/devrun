#!/usr/bin/python3

## set up EVC stuff

import qbroker; qbroker.setup()
import asyncio
import argparse
import sys

from evc.cmd import parser,cmd
from qbroker.util.async import Main

import logging
logger = logging.getLogger(__name__)

class Run(Main):
    def __init__(self,cmd,args):
        super().__init__()
        self.cmd = cmd
        self.args = args
    async def at_start(self):
        try:
            await self.cmd(*self.args)
        finally:
            self.stop()

def main():
    p = parser()
    p.add_argument('mode', help='change what to do')
    p.add_argument('args', nargs='*', help='(command-specific)')
    if p.epilog is None: p.epilog = ""
    p.epilog += """\

%(prog)s help           -- list of commands
%(prog)s help ‹command› -- help for this command
"""

    opt = p.parse_args()
    opt.loop = asyncio.get_event_loop()
    c = cmd[opt.mode](opt)
    r = Run(c.run,opt.args)
    try:
        r.run()
    except Exception as exc:
        if opt.verbose > 1:
            raise
        print("%s: %s" % (type(exc).__name__,str(exc)), file=sys.stderr)

if __name__ == '__main__':
    main()
